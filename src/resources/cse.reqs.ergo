/*
    Rules, facts and queries for Stony Brook University Computer Science
    graduation requirements.
*/

// // Student predicate
// Student(?_X,?_Y,?_Z,?_W) :- ?_Name,?_ID,?_Major, ?_GPA.
// 
// // Under/graduate students
// Undergrad(?_X,?_Y,?_Z,?_W,?_Q) :- Student(?_Name,?_ID,?_Major, ?_GPA), ?_Minor.
// Grad(?_X,?_Y,?_Z,?_W) :- Student(?_Name,?_ID,?_Major, ?_GPA).

// Add CSE courses 
//+cse. // Load CSE course knowledge graph.
// newmodule{courses}.
+[cse->parse2memory(cse)].

Student(?_Q,?_R,?_S,?_T) :- 
    ?_Name,
    ?_ID,
    ?_CoursesTaken,
    ?_Pref.

{Undergrad,Grad} :: Student.

Grad(Socrates, 12345, [],[]).
Undergrad(Plato,45678,[],[]).

// Define: semester and max_credits

// Need semester predicate -- list of lists perhaps

// Need to query cse knowledge graph

// [foo], ?Subject[?Property->?Object]., ?Prop = class num, ?Obj is: credits, under/grad, prereqs.

// need to check if prereq satisfied

// Get courses for each semester

// minimize the number of semesters


// check for courses with 3 credits (cli)
// [cse], ?Subject[?Credits->3].

// Query specific course number
// [cse], ?Subject[?CourseNumber->CSE512].
